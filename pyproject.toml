[tool.black]
line-length = 120
skip-string-normalization = true

[tool.isort]
line_length = '120'
multi_line_output = '3'
include_trailing_comma = 'true'
combine_as_imports = '1'
known_firstparty = ['project']
known_third_party = []
sections = 'FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER'

[tool.pylint."MASTER"]
extension-pkg-whitelist = ['pydantic']
load-plugins = ['pylint_pydantic']
ignore = [
    'celeryconfig.py',
]

[tool.pylint."FORMAT"]
max-line-length = 120

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "too-few-public-methods",
    "too-many-ancestors",
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "duplicate-code"
]
[tool.pylint."BASIC"]
good-names = [
    'rf', 'pk', 'fn', 'cb',
    'i', 'j', 'k', 'e', 't', 'r',
    'yes', 'no'
]

[tool.poetry]
name = "language-gpt"
version = "0.1.0"
description = "A Telegram bot to learn languages with ChatGPT"
authors = ["Smokost <smokost@gmail.com>"]
readme = "README.md"
packages = [
    {include = "project", from = "src"},
    {include = "poetry_scripts", from = "src"},
]

[tool.poetry.dependencies]
python = "^3.10"
pymongo = "4.6.3"
motor = "3.1.2"
python-dotenv = "0.21.0"
pytelegrambotapi = "4.10.0"
aiohttp = "3.9.4"
pydantic = "1.10.13"
openai = "1.13.3"
ipython = "8.10.0"
google-cloud-texttospeech = "^2.14.1"
pydub = "0.25.1"
urllib3 = "^1.26.0"
poetry = "1.4.0"
telebot_models = {url = "https://github.com/Appuxif/telebot_models/archive/refs/tags/1.0.0.tar.gz"}
telebot_views = {url = "https://github.com/Appuxif/telebot_views/archive/refs/tags/1.1.1.tar.gz"}
asyncio_functools = {url = "https://github.com/Appuxif/asyncio_functools/archive/refs/tags/0.0.2.tar.gz"}

[tool.pytest.ini_options]
markers = [
    "drop_db_collections: drop db collections before test",
]

[tool.poetry.group.dev.dependencies]
pytest = "7.2.0"
pytest-black = "0.3.12"
pytest-asyncio = "0.20.3"
pytest-mock = "3.10.0"
isort = "5.10.1"
black = "24.3.0"
pylint = "2.15.8"
pylint-pydantic = "0.1.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
test = "src.poetry_scripts:test"
project-dev = "src.poetry_scripts.project:run_project_dev"
project-shell = "src.poetry_scripts.project:run_project_shell"
